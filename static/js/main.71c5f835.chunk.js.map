{"version":3,"sources":["components/Hero.js","components/Banner.js","components/Title.js","components/Services.js","Contentful.js","Context.js","components/Loading.js","components/Room.js","components/FeaturedRooms.js","pages/Home.js","components/RoomsFilter.js","components/RoomList.js","components/RoomsContainer.js","pages/Rooms.js","components/StyledHero.js","pages/SingleRoom.js","pages/Error.js","components/Navbar.js","App.js","serviceWorker.js","index.js","images/room-1.jpeg","images/gif/loading-arrow.gif","images/logo.svg"],"names":["Hero","children","hero","className","Banner","title","subtitle","defaultProps","Title","Services","state","services","icon","info","this","map","item","index","key","Component","createClient","space","process","REACT_APP_API_SPACE","accessToken","REACT_APP_ACCESS_TOKEN","RoomContext","React","createContext","RoomProvider","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getData","a","async","Client","getEntries","content_type","order","response","formatData","items","filter","room","featured","Math","max","size","setState","console","log","getRoom","slug","find","handleChange","event","target","value","checked","name","filterRooms","tempRooms","parseInt","id","sys","images","fields","image","file","url","Provider","props","RoomConsumer","Consumer","Loading","src","loadingGif","alt","Room","defaultImg","to","FeaturedRooms","context","Home","Fragment","contextType","getUnique","Set","RoomsFilter","useContext","types","people","htmlFor","onChange","min","RoomList","length","withRoomConsumer","Rooms","RoomsContainer","StyledHero","styled","header","img","SingleRoom","match","params","defaultBCG","description","extras","mainImg","Error","Navbar","isOpen","handleToggle","logo","onClick","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.71c5f835.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Hero({children, hero}) {\n    return (\n        <header className={hero}>\n            {children}\n        </header>\n    );\n}\n\nHero.defaultProps ={\n    hero:'defaultHero'\n};","import React from 'react'\n\nexport default function Banner({children,title,subtitle}) {\n    return (\n        <div className=\"banner\">\n            <h1>{title}</h1>\n            <div></div>\n            <p>{subtitle}</p>\n            {children}\n        </div>\n    );\n}\n","import React from 'react'\n\nexport default function Title({title}) {\n    return (\n        <div className=\"section-title\">\n            <h4>{title}</h4>\n            <div></div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport Title from './Title';\nimport {FaCocktail, FaHiking, FaShuttleVan, FaBeer} from 'react-icons/fa';\n\nexport default class Services extends Component {\n    state={\n        services:[\n            {\n            icon:<FaCocktail/>,\n            title:\"free cocktails\",\n            info:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n            },\n            {\n            icon:<FaHiking/>,\n            title:\"endless hiking\",\n            info:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n            },\n            { \n            icon:<FaShuttleVan/>,\n            title:\"free shuttle\",\n            info:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n            },\n            {\n            icon:<FaBeer/>,\n            title:\"strongest beer\",\n            info:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n            }\n        ]\n    }\n    render() {\n        return (\n            <section className=\"services\">\n                <Title title=\"services\"></Title>\n                <div className=\"services-center\">\n                    {this.state.services.map((item, index)=>{\n                        return <article key={index} className=\"service\">\n                            <span>{item.icon}</span>\n                            <h6>{item.title}</h6>\n                            <p>{item.info}</p>\n                        </article>\n                    })}\n                </div>\n            </section>\n        );\n    }\n}\n","import {createClient} from 'contentful';\r\n\r\nexport default createClient({\r\n    space: process.env.REACT_APP_API_SPACE,\r\n    accessToken: process.env.REACT_APP_ACCESS_TOKEN\r\n});","import React, { Component } from 'react';\n//import items from \"./data\";\nimport Client from './Contentful';\n\n\n\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n    state={\n        rooms:[],\n        sortedRooms:[],\n        featuredRooms:[],\n        loading: true,\n        type: 'all',\n        capacity: 1,\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pets: false\n    };\n    //getData\n    getData = async() =>{\n        try {\n            let response = await Client.getEntries({\n                content_type: \"beachResort\",\n                order: \"sys.createdAt\"\n                //order: \"fields.price\"\n            });\n            let rooms = this.formatData(response.items);\n            let featuredRooms = rooms.filter(room=>room.featured === true);\n            let maxPrice = Math.max(...rooms.map(item=> item.price));\n            let maxSize = Math.max(...rooms.map(item=> item.size));\n            this.setState({\n                rooms,\n                featuredRooms,\n                sortedRooms:rooms,\n                loading:false,\n                price:maxPrice,\n                maxPrice,\n                maxSize\n            });\n\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n    componentDidMount(){\n        this.getData()\n        \n    };\n\n    formatData(items){\n        let tempItems = items.map(item =>{\n            let id = item.sys.id\n            let images = item.fields.images.map(image=> image.fields.file.url);\n            let room = {...item.fields,images,id}\n            return room;\n        });\n        return tempItems;\n    };\n    getRoom = (slug) =>{\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug===slug);\n        return room;\n    };\n    handleChange = event =>{\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked:target.value;\n        const name = event.target.name;\n        this.setState({\n            [name]:value\n        },this.filterRooms);\n    };\n    filterRooms = ()=>{\n        let {\n            rooms, type, capacity, price, minSize, maxSize, breakfast, pets\n        } = this.state;\n        //all the rooms\n        let tempRooms = [...rooms];\n        //transform value\n        capacity = parseInt(capacity);\n        price = parseInt(price);\n        //filter by type\n        if(type!== 'all'){\n            tempRooms = tempRooms.filter(room => room.type === type)\n        }  \n        //filter by capacity\n        if(capacity !== 1){\n            tempRooms = tempRooms.filter(room =>room.capacity>=capacity);\n        }\n        //filter by price\n        tempRooms = tempRooms.filter(room => room.price <= price);\n        //filter by room size\n        tempRooms=tempRooms.filter(room => room.size >= minSize && room.size <= maxSize)\n        //filter by breakfast\n        if(breakfast){\n            tempRooms = tempRooms.filter(room => room.breakfast===true);\n        }\n        //filter by pets\n        if(pets){\n            tempRooms = tempRooms.filter(room => room.pets===true);\n        }\n        //change state\n        this.setState({\n            sortedRooms:tempRooms\n        });\n    };\n    render() {\n        return (\n            <RoomContext.Provider value={{...this.state, getRoom: this.getRoom, handleChange:this.handleChange}}>\n                {this.props.children}\n            </RoomContext.Provider>\n        );\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component){\n    return function ConsumerWrapper(props){\n        return (\n            <RoomConsumer>\n                {value=><Component {...props} context={value} />}\n            </RoomConsumer>\n        );\n    }\n}\n\nexport{RoomProvider, RoomConsumer, RoomContext};","import React from 'react';\nimport loadingGif from '../images/gif/loading-arrow.gif';\n\nexport default function Loading() {\n    return (\n        <div className=\"loading\">\n            <h4>rooms data loading...</h4>\n            <img src={loadingGif} alt=\"\"></img>\n        </div>\n    );\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport defaultImg from '../images/room-1.jpeg';\nimport PropTypes from 'prop-types';\n\nexport default function Room({room}) {\n    const {name, slug, images, price} = room;\n    return (\n        <article className=\"room\">\n            <div className=\"img-container\">\n                <img src={images[0] || defaultImg} alt=\"single room\"></img>\n                <div className=\"price-top\">\n                    <h6>${price}</h6>\n                    <p>per night</p>\n                </div>\n                <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">Features</Link>\n            </div>\n            <p className=\"room-info\">{name}</p>\n        </article>\n    );\n}\n\nRoom.propTypes = {\n    room:PropTypes.shape({\n        name:PropTypes.string.isRequired,\n        slug:PropTypes.string.isRequired,\n        images:PropTypes.arrayOf(PropTypes.string).isRequired,\n        price:PropTypes.number.isRequired,\n    })\n}","import React, { Component } from 'react';\nimport {RoomContext} from '../Context';\nimport Loading from \"./Loading\";\nimport Room from \"./Room\";\nimport Title from \"./Title\";\n\nexport default class FeaturedRooms extends Component {\n    static contextType = RoomContext;\n    render() {\n        let {loading, featuredRooms:rooms} = this.context;\n        rooms = rooms.map(room => {\n            return <Room key={room.id} room={room} />\n        });\n\n        return (\n            <section className=\"featured-rooms\">\n                <Title title=\"featured rooms\"></Title>\n                <div className=\"featured-rooms-center\">\n                    {loading?<Loading/>:rooms}\n                </div>\n            </section>\n        );\n    }\n}\n","import React from 'react';\nimport Hero from '../components/Hero';\nimport Banner from '../components/Banner';\nimport {Link} from 'react-router-dom';\nimport Services from '../components/Services';\nimport FeaturedRooms from '../components/FeaturedRooms';\n\nexport default function Home() {\n    return (\n    <React.Fragment>\n        <Hero hero=\"defaultHero\">\n            <Banner title=\"luxurious rooms\" subtitle=\"deluxe rooms starting at $299\">\n                <Link to=\"/rooms\" className=\"btn-primary\">our rooms</Link>\n            </Banner>\n        </Hero>\n        <Services></Services>\n        <FeaturedRooms></FeaturedRooms>\n        \n    </React.Fragment>\n    );\n}\n","import React from 'react';\r\nimport {useContext} from 'react';\r\nimport {RoomContext} from '../Context';\r\nimport Title from '../components/Title';\r\n\r\n//get all unique values\r\nconst getUnique = (items, value) =>{\r\n    return [...new Set(items.map(item=>item[value]))];\r\n}\r\n\r\nexport default function RoomsFilter({rooms}) {\r\n    const context = useContext(RoomContext);\r\n    const {handleChange, type, capacity, price, minPrice, maxPrice, minSize, maxSize, breakfast, pets} = context;\r\n    //get unique types\r\n    let types = getUnique(rooms,'type');\r\n    //add all\r\n    types = ['all',...types];\r\n    //map to jsx\r\n    types = types.map((item, index)=>{\r\n        return (\r\n            <option value={item} key={index}>{item}</option>\r\n        );\r\n    });\r\n    let people = getUnique(rooms,'capacity');\r\n    people = people.map((item,index)=>{\r\n        return (\r\n            <option key={index} value={item} >{item}</option>\r\n        );\r\n    })\r\n    return (\r\n        <section className=\"filter-container\">\r\n           <Title title=\"search rooms\"></Title>\r\n           <form className=\"filter-form\">\r\n               {/* select type */}\r\n               <div className=\"form-group\">\r\n                    <label htmlFor=\"type\">room type</label>\r\n                    <select name=\"type\" id=\"type\" value={type} className=\"form-control\" onChange={handleChange}>\r\n                        {types}\r\n                    </select>\r\n               </div>\r\n               {/* end select type*/}\r\n               {/* guests */}\r\n               <div className=\"form-group\">\r\n                    <label htmlFor=\"capacity\">guests</label>\r\n                    <select name=\"capacity\" id=\"capacity\" value={capacity} className=\"form-control\" onChange={handleChange}>\r\n                        {people}\r\n                    </select>\r\n               </div>\r\n               {/* end guests */}\r\n               {/* room price */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"price\">room price ${price}</label>\r\n                    <input type=\"range\" name=\"price\" min={minPrice} max={maxPrice} id=\"price\" value={price} onChange={handleChange} className=\"form-control\"></input>\r\n                </div>\r\n                {/* end of room price */}\r\n                {/* size */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"size\">room size</label>\r\n                    <div className=\"size-inputs\">\r\n                        <input type=\"number\" name=\"minSize\" id=\"size\" value={minSize} onChange={handleChange} className=\"size-input\"></input>\r\n                        <input type=\"number\" name=\"maxSize\" id=\"size\" value={maxSize} onChange={handleChange} className=\"size-input\"></input>\r\n                    </div>\r\n                </div>\r\n                {/* end of size */}\r\n                {/* extras */}\r\n                <div className=\"form-group\">\r\n                    <div className=\"single-extra\">\r\n                        <input type=\"checkbox\" name=\"breakfast\" id=\"breakfast\" checked={breakfast} onChange={handleChange}></input>\r\n                        <label htmlFor=\"breakfast\">breakfast</label>\r\n                    </div>\r\n                    <div className=\"single-extra\">\r\n                        <input type=\"checkbox\" name=\"pets\" id=\"pets\" checked={pets} onChange={handleChange}></input>\r\n                        <label htmlFor=\"pets\">pets</label>\r\n                    </div>\r\n                </div>\r\n                {/* end of extras */}\r\n           </form>\r\n        </section>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Room from './Room';\r\n\r\nexport default function RoomList({rooms}) {\r\n    if(rooms.length === 0){\r\n        return (\r\n        <div className=\"empty-search\">\r\n            <h3>unfortunately no rooms matched your search parameters</h3>\r\n        </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <section className=\"roomslist\">\r\n            <div className=\"roomslist-center\">\r\n                {\r\n                    rooms.map(item =>{\r\n                        return(\r\n                            <Room key={item.id} room={item}></Room>\r\n                        );\r\n                    })}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport RoomsFilter from './RoomsFilter';\r\nimport RoomList from './RoomList';\r\nimport {withRoomConsumer} from '../Context';\r\nimport Loading from './Loading';\r\n\r\nfunction RoomContainer({context}){\r\n    const {loading, sortedRooms, rooms} = context;\r\n    if(loading){\r\n        return <Loading></Loading>;\r\n    }\r\n    return(\r\n    <>\r\n    <RoomsFilter rooms={rooms}></RoomsFilter>\r\n    <RoomList rooms={sortedRooms}></RoomList>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default withRoomConsumer(RoomContainer);\r\n\r\n\r\n// export default function RoomsContainer() {\r\n//     return (\r\n//         <RoomConsumer>\r\n//             {\r\n//                 (value) =>{\r\n//                     const {loading, sortedRooms, rooms} = value;\r\n//                     if(loading){\r\n//                         return <Loading></Loading>;\r\n//                     }\r\n//                     return(\r\n//                         <div>\r\n//                         Hello from rooms container\r\n//                         <RoomsFilter rooms={rooms}></RoomsFilter>\r\n//                         <RoomList rooms={sortedRooms}></RoomList>\r\n//                     </div>\r\n//                     );\r\n//                 }\r\n//             }\r\n//         </RoomConsumer>\r\n//     );\r\n// }\r\n","import React from 'react';\nimport Hero from '../components/Hero';\nimport Banner from '../components/Banner';\nimport {Link} from 'react-router-dom';\nimport RoomsContainer from '../components/RoomsContainer';\n\nconst Rooms = () => {\n    return (\n        <React.Fragment>\n            <Hero hero=\"roomsHero\">\n                <Banner title=\"our rooms\">\n                    <Link to='/' className=\"btn-primary\">return home</Link>\n                </Banner>\n            </Hero>\n            <RoomsContainer/>\n        </React.Fragment>\n    );\n};\n\nexport default Rooms;\n","import styled from 'styled-components';\r\nimport defaultImg from '../images/room-1.jpeg';\r\n\r\nconst StyledHero = styled.header`\r\n  min-height: 60vh;\r\n  background: url(${props =>(props.img?props.img:defaultImg)}) center/cover no-repeat;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default StyledHero;","import React, { Component } from 'react';\nimport defaultBCG from '../images/room-1.jpeg';\nimport Hero from '../components/Hero';\nimport Banner from '../components/Banner';\nimport {Link} from 'react-router-dom';\nimport {RoomContext} from '../Context';\nimport StyledHero from '../components/StyledHero';\n\nexport default class SingleRoom extends Component {\n    constructor(props){\n        super(props)\n        //console.log(this.props);\n        this.state={\n            slug:this.props.match.params.slug, defaultBCG\n        };\n        \n    }\n    static contextType = RoomContext;\n   // componentDidMount() {}\n    render() {\n        const {getRoom} = this.context;\n        const room = getRoom(this.state.slug);\n        if (!room) {\n            return (\n            <div className=\"error\">\n                <h3>no such room could be found...</h3>\n                <Link to='/rooms' className=\"btn-primary\">back to rooms</Link>\n            </div>\n            );\n        }\n        const {name, description, capacity, size, price, extras, breakfast,pets,images} = room;\n        const [mainImg, ...defaultImg] = images;\n        return (\n            <React.Fragment>\n            <StyledHero img={mainImg || this.state.defaultBCG}>\n                <Banner title={`${name} room`}>\n                    <Link to='/rooms' className='btn-primary'>back to rooms</Link>\n                </Banner>\n            </StyledHero>\n            <section className='single-room'>\n                <div className='single-room-images'>\n                {defaultImg.map((item,index)=>{\n                   return(\n                        <img key={index} src={item} alt={name}></img>\n                   );\n                })}\n                </div>\n                <div className=\"single-room-info\">\n                    <article className=\"desc\">\n                        <h3>details</h3>\n                        <p>{description}</p>\n                    </article>\n                    <article className=\"info\">\n                        <h3>info</h3>\n                        <h6>price : ${price}</h6>\n                        <h6>size : {size} SQFT</h6>\n                        <h6>max capacity : {\n                             capacity > 1 ? `${capacity} people` : `${capacity} person`}\n                        </h6>\n                        <h6>{pets?\"pets allowed\":\"no pets allowed\"}</h6>\n                        <h6>{breakfast && \"free breakfast included\"}</h6>\n                    </article>\n                </div>\n            </section>\n            <section className=\"room-extras\">\n                <h6>extras</h6>\n                <ul className=\"extras\">\n                    {extras.map((item,index)=>{\n                        return <li key={index}>- {item}</li>\n                    })}\n                </ul>\n            </section>\n            </React.Fragment>\n        );\n    }\n}\n","import React from 'react';\nimport Hero from '../components/Hero';\nimport Banner from '../components/Banner';\nimport {Link} from 'react-router-dom';\n\nexport default function Error() {\n    return (\n        <Hero>\n            <Banner title=\"404\" subtitle=\"page not found\">\n                <Link to=\"/\" className=\"btn-primary\">return home</Link>\n            </Banner>\n        </Hero>\n    );\n}\n","import React, { Component } from 'react';\nimport logo from '../images/logo.svg';\nimport {FaAlignRight} from 'react-icons/fa';\nimport {Link} from 'react-router-dom';\n\nexport default class Navbar extends Component {\n    state={\n        isOpen:false\n    };\n    handleToggle = () => {\n        this.setState({isOpen:!this.state.isOpen})\n    };\n    render() {\n        return (\n            <nav className=\"navbar\">\n                <div className=\"nav-center\">\n                    <div className=\"nav-header\">\n                        <Link to=\"/\">\n                            <img src={logo} alt=\"Beach Resort\"></img>\n                        </Link>\n                        <button type=\"button\" className=\"nav-btn\" onClick={this.handleToggle}> \n                            <FaAlignRight className=\"nav-icon\" />\n                        </button>\n                    </div>\n                    <ul className={this.state.isOpen?\"nav-links show-nav\":\"nav-links\"}>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/rooms\">Rooms</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n","import React from 'react';\nimport './App.css'; \nimport Home from './pages/Home';\nimport Rooms from './pages/Rooms';\nimport SingleRoom from './pages/SingleRoom';\nimport Error from './pages/Error';\nimport {Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <>\n    <Navbar />\n    <Switch>\n    <Route exact path=\"/\" component={Home}/>\n    <Route exact path=\"/rooms\" component={Rooms}/>\n    <Route exact path=\"/rooms/:slug\" component={SingleRoom}/>\n    <Route component={Error}/>\n    </Switch>\n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {RoomProvider} from './Context';\n\nReactDOM.render(\n    <RoomProvider>\n        <Router>\n            <App />\n        </Router>\n    </RoomProvider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/room-1.e928a5c4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/loading-arrow.e9ea7394.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.9f0cccc1.svg\";"],"sourceRoot":""}